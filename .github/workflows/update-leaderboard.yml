name: Update Leaderboard

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 运行
  workflow_dispatch:      # 允许手动触发
  push:                  # push 触发器
    paths:
      - 'conversations/**'  # 只有对话文件变更时触发
    branches:
      - main              # 只在 main 分支触发
  pull_request:          # PR 触发器
    types: [opened, synchronize, reopened, closed]
    paths:
      - 'conversations/**'  # 只有对话文件变更时触发

jobs:
  update-leaderboard:
    runs-on: ubuntu-latest
    # 只在 PR 合并到 main 分支时或直接推送到 main 分支时更新积分
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史以便计算贡献
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug repository state
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Conversations directory contents:"
          ls -la conversations/
          echo "Git status:"
          git status
          echo "Git remote:"
          git remote -v

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML python-frontmatter datetime pytz
          pip list

      - name: Debug Python environment
        run: |
          echo "Python version:"
          python --version
          echo "Pip version:"
          pip --version
          echo "Installed packages:"
          pip freeze

      - name: Update leaderboard
        run: |
          echo "Running leaderboard update script..."
          python .github/scripts/update_leaderboard.py
          echo "Script execution completed"
          echo "Leaderboard content after update:"
          cat community/leaderboard.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for changes
        id: check_changes
        run: |
          git status
          echo "Has changes: $(git status --porcelain | grep -q .; echo $?)"
          echo "::set-output name=has_changes::$(git status --porcelain | grep -q .; echo $?)"

      - name: Commit changes
        if: steps.check_changes.outputs.has_changes == '0'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add community/leaderboard.md
          git commit -m "Update leaderboard [skip ci]"
          echo "Changes committed successfully"

      - name: Push changes
        if: steps.check_changes.outputs.has_changes == '0'
        run: |
          echo "Pushing changes to repository..."
          git push
          echo "Changes pushed successfully"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
