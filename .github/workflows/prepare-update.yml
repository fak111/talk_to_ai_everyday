name: Prepare Leaderboard Update

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 运行
  workflow_dispatch:      # 允许手动触发
  pull_request:          # PR 触发器
    types: [closed]
    paths:
      - 'conversations/**'  # 只有对话文件变更时触发

jobs:
  prepare-update:
    runs-on: ubuntu-latest
    # 只在 PR 合并到 main 分支时运行
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史以便计算贡献
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML python-frontmatter datetime pytz

      - name: Update leaderboard
        run: |
          echo "Running leaderboard update script..."
          python .github/scripts/update_leaderboard.py
          echo "Script execution completed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for changes
        id: check_changes
        run: |
          git status
          changed=$(git status --porcelain | wc -l)
          echo "changed=$changed" >> $GITHUB_OUTPUT

      - name: Commit and push to data branch
        if: steps.check_changes.outputs.changed != '0'
        run: |
          # 配置 Git
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # 创建并切换到数据分支
          git checkout -b leaderboard-data

          # 添加并提交更改
          git add community/leaderboard.md
          git commit -m "Update leaderboard data [skip ci]"

          # 强制推送到数据分支（确保始终是最新的）
          git push -f origin leaderboard-data
